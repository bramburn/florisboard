"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[289],{213:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"getting-started/introduction","title":"Introduction to FlorisBoard","description":"Welcome to the FlorisBoard documentation! This guide aims to help you understand, build, and potentially extend FlorisBoard, an open-source keyboard for Android.","source":"@site/docs/getting-started/introduction.md","sourceDirName":"getting-started","slug":"/getting-started/introduction","permalink":"/florisboard/docs/getting-started/introduction","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Initial Build and Run","permalink":"/florisboard/docs/getting-started/initial-build-and-run"},"next":{"title":"Opening in Android Studio","permalink":"/florisboard/docs/getting-started/opening-in-android-studio"}}');var i=t(4848),r=t(8453);const s={},d="Introduction to FlorisBoard",a={},l=[{value:"What is FlorisBoard?",id:"what-is-florisboard",level:2},{value:"Target Audience",id:"target-audience",level:2},{value:"Documentation Goal",id:"documentation-goal",level:2}];function c(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"introduction-to-florisboard",children:"Introduction to FlorisBoard"})}),"\n",(0,i.jsx)(n.p,{children:"Welcome to the FlorisBoard documentation! This guide aims to help you understand, build, and potentially extend FlorisBoard, an open-source keyboard for Android."}),"\n",(0,i.jsx)(n.p,{children:"FlorisBoard is built with a focus on privacy, modern design, and extensibility. It leverages cutting-edge Android development technologies, including Kotlin, Jetpack Compose, and a modular architecture."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-florisboard",children:"What is FlorisBoard?"}),"\n",(0,i.jsx)(n.p,{children:"FlorisBoard is an Input Method Editor (IME) for Android devices. An IME is a user component that enables users to input text in various forms, such as on-screen keyboards for touch devices. FlorisBoard provides a rich set of features, including:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Privacy-focused:"})," Designed with user privacy in mind."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modern UI:"})," Built using Jetpack Compose for a responsive and customizable user experience."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Extensible:"})," A modular architecture that allows for easy extension and customization."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Spell Checker:"})," Integrated spell-checking capabilities."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clipboard Manager:"})," Advanced clipboard management features."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"target-audience",children:"Target Audience"}),"\n",(0,i.jsx)(n.p,{children:"This documentation is intended for:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Users"})," who want to understand FlorisBoard's features and how to use it."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Developers"})," who want to build FlorisBoard from source, contribute to its development, or use its architecture/components to create their own custom Android keyboard projects."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"documentation-goal",children:"Documentation Goal"}),"\n",(0,i.jsx)(n.p,{children:"The ultimate goal of this documentation is to provide a comprehensive resource that allows anyone to:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Replicate the FlorisBoard application"})," from source, detailing all necessary setup and build steps."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Understand the core architecture and API connections"})," between the keyboard's logic and the Android framework."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Start a new custom keyboard project in Android Studio from scratch"}),", leveraging the knowledge and patterns used in FlorisBoard."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Let's begin by setting up your development environment and getting FlorisBoard running on your device or emulator."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>d});var o=t(6540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);