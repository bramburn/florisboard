"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[735],{3722:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/florisboard/docs/getting-started/cloning-the-repository","label":"Cloning the Repository","docId":"getting-started/cloning-the-repository","unlisted":false},{"type":"link","href":"/florisboard/docs/getting-started/initial-build-and-run","label":"Initial Build and Run","docId":"getting-started/initial-build-and-run","unlisted":false},{"type":"link","href":"/florisboard/docs/getting-started/introduction","label":"Introduction to FlorisBoard","docId":"getting-started/introduction","unlisted":false},{"type":"link","href":"/florisboard/docs/getting-started/opening-in-android-studio","label":"Opening in Android Studio","docId":"getting-started/opening-in-android-studio","unlisted":false},{"type":"link","href":"/florisboard/docs/getting-started/prerequisites","label":"Prerequisites","docId":"getting-started/prerequisites","unlisted":false}],"href":"/florisboard/docs/category/getting-started"},{"type":"category","label":"Core Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","href":"/florisboard/docs/core-concepts/ime-fundamentals","label":"Input Method Editor (IME) Fundamentals","docId":"core-concepts/ime-fundamentals","unlisted":false}],"href":"/florisboard/docs/category/core-concepts"}]},"docs":{"core-concepts/ime-fundamentals":{"id":"core-concepts/ime-fundamentals","title":"Input Method Editor (IME) Fundamentals","description":"An Input Method Editor (IME), commonly known as a virtual keyboard, is a crucial component of the Android operating system. It allows users to input text into any application. FlorisBoard is an advanced example of an IME, leveraging various Android APIs and best practices.","sidebar":"tutorialSidebar"},"getting-started/cloning-the-repository":{"id":"getting-started/cloning-the-repository","title":"Cloning the Repository","description":"Once you have set up all the prerequisites, the next step is to clone the FlorisBoard repository to your local machine. This will download the entire source code of the project.","sidebar":"tutorialSidebar"},"getting-started/initial-build-and-run":{"id":"getting-started/initial-build-and-run","title":"Initial Build and Run","description":"After successfully opening the project in Android Studio, the next crucial step is to build and run the FlorisBoard application. This will deploy the app to an emulator or a physical device, allowing you to see it in action.","sidebar":"tutorialSidebar"},"getting-started/introduction":{"id":"getting-started/introduction","title":"Introduction to FlorisBoard","description":"Welcome to the FlorisBoard documentation! This guide aims to help you understand, build, and potentially extend FlorisBoard, an open-source keyboard for Android.","sidebar":"tutorialSidebar"},"getting-started/opening-in-android-studio":{"id":"getting-started/opening-in-android-studio","title":"Opening in Android Studio","description":"After cloning the repository, the next step is to open the FlorisBoard project in Android Studio. This will allow Android Studio to set up the project, download dependencies, and prepare it for development.","sidebar":"tutorialSidebar"},"getting-started/prerequisites":{"id":"getting-started/prerequisites","title":"Prerequisites","description":"Before you can build and run FlorisBoard, you need to set up your development environment with the following tools and software:","sidebar":"tutorialSidebar"}}}}')}}]);